---
openapi: 3.0.3
info:
  title: Dataverse API
  version: "1.0"
paths:
  /api/v1/access/datafile/bundle/{fileId}:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/zip:
              schema:
                type: object
  /api/v1/access/datafile/{fileId}:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          pattern: .+
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{fileId}/auxiliary:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{fileId}/auxiliary/{formatTag}/{formatVersion}:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: formatTag
        in: path
        required: true
        schema:
          type: string
      - name: formatVersion
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{fileId}/auxiliary/{origin}:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: origin
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{fileId}/metadata:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: exclude
        in: query
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/xml:
              schema:
                type: string
  /api/v1/access/datafile/{fileId}/metadata/ddi:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      - name: exclude
        in: query
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/xml:
              schema:
                type: string
  /api/v1/access/datafile/{id}/grantAccess/{identifier}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{id}/listRequests:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{id}/rejectAccess/{identifier}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{id}/requestAccess:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{id}/revokeAccess/{identifier}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{id}/userFileAccessRequested:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafile/{id}/userPermissions:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafiles:
    post:
      parameters:
      - name: gbrecs
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/access/datafiles/{fileIds}:
    get:
      parameters:
      - name: fileIds
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/access/dataset/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/access/dataset/{id}/versions/{versionId}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: gbrecs
        in: query
        schema:
          type: boolean
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/access/dsCardImage/{versionId}:
    get:
      parameters:
      - name: versionId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: binary
                type: string
  /api/v1/access/dvCardImage/{dataverseId}:
    get:
      parameters:
      - name: dataverseId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: binary
                type: string
  /api/v1/access/fileCardImage/{fileId}:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
          content:
            image/png:
              schema:
                format: binary
                type: string
  /api/v1/access/{id}/allowAccessRequest:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/archiveAllUnarchivedDatasetVersions:
    post:
      parameters:
      - name: latestonly
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: listonly
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/assignee/{idtf}:
    get:
      parameters:
      - name: idtf
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/assignments/assignees/{raIdtf}:
    get:
      parameters:
      - name: raIdtf
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers:
    get:
      responses:
        "200":
          description: OK
      deprecated: true
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers/convert/builtin2oauth:
    put:
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers/convert/builtin2shib:
    put:
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers/id/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers/id/{id}/convertRemoteToBuiltIn:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers/id/{id}/convertShibToBuiltIn:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
      deprecated: true
  /api/v1/admin/authenticatedUsers/id/{id}/deactivate:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers/{identifier}:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticatedUsers/{identifier}/deactivate:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticationProviderFactories:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticationProviders:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticationProviders/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticationProviders/{id}/:enabled:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/authenticationProviders/{id}/enabled:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/bannerMessage:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/bannerMessage/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/bannerMessage/{id}/deactivate:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/batch/jobs:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/batch/jobs/name/{jobName}:
    get:
      parameters:
      - name: jobName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/batch/jobs/{jobId}:
    get:
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/clearMetricsCache:
    delete:
      responses:
        "200":
          description: OK
  /api/v1/admin/clearMetricsCache/{name}:
    delete:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/clearThumbnailFailureFlag:
    delete:
      responses:
        "200":
          description: OK
  /api/v1/admin/clearThumbnailFailureFlag/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/computeDataFileHashValue/{fileId}/algorithm/{alg}:
    post:
      parameters:
      - name: alg
        in: path
        required: true
        schema:
          type: string
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/confirmEmail/{userId}:
    get:
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/convertUserFromBcryptToSha1:
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/datafiles/integrity/fixmissingoriginalsizes:
    get:
      parameters:
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/datafiles/integrity/fixmissingoriginaltypes:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/datasetfield:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/datasetfield/controlledVocabulary/subject:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/datasetfield/load:
    post:
      requestBody:
        content:
          text/tab-separated-values:
            schema:
              format: binary
              type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/datasetfield/loadNAControlledVocabularyValue:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/datasetfield/loadpropertyfiles:
    post:
      requestBody:
        content:
          application/zip:
            schema:
              format: binary
              type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/datasetfield/{name}:
    get:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/datasets/integrity/{datasetVersionId}/fixmissingunf:
    post:
      parameters:
      - name: datasetVersionId
        in: path
        required: true
        schema:
          type: string
      - name: forceRecalculate
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/datasets/thumbnailMetadata/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/dataverse/curationLabelSets:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/dataverse/storageDrivers:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/dataverse/{alias}/addRoleAssignmentsToChildren:
    get:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/dataverse/{alias}/curationLabelSet:
    get:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/dataverse/{alias}/storageDriver:
    get:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/downloadTmpFile:
    get:
      parameters:
      - name: fullyQualifiedPathToFile
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/externalTools:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/externalTools/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/feedback:
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/groups/domain:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/groups/domain/{groupAlias}:
    get:
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: groupAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/groups/ip:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/groups/ip/{groupIdtf}:
    get:
      parameters:
      - name: groupIdtf
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: groupIdtf
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/groups/shib:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/groups/shib/{primaryKey}:
    delete:
      parameters:
      - name: primaryKey
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index:
    get:
      parameters:
      - name: numPartitions
        in: query
        schema:
          format: int64
          type: integer
      - name: partitionIdToProcess
        in: query
        schema:
          format: int64
          type: integer
      - name: previewOnly
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/index/clear:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/index/clear-orphans:
    get:
      parameters:
      - name: sync
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index/continue:
    get:
      parameters:
      - name: numPartitions
        in: query
        schema:
          format: int64
          type: integer
      - name: partitionIdToProcess
        in: query
        schema:
          format: int64
          type: integer
      - name: previewOnly
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/index/dataset:
    get:
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index/datasets/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/index/filemetadata/{dataset_id}:
    get:
      parameters:
      - name: dataset_id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: maxResults
        in: query
        schema:
          format: int32
          type: integer
      - name: order
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index/filesearch:
    get:
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
      - name: semanticVersion
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index/mod:
    get:
      parameters:
      - name: partitions
        in: query
        schema:
          format: int64
          type: integer
      - name: which
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/index/perms:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/index/perms/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/index/permsDebug:
    get:
      parameters:
      - name: id
        in: query
        schema:
          format: int64
          type: integer
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index/solr/schema:
    get:
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/admin/index/status:
    get:
      parameters:
      - name: sync
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index/test:
    get:
      parameters:
      - name: fq
        in: query
        schema:
          type: array
          items:
            type: string
      - name: key
        in: query
        schema:
          type: string
      - name: q
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/index/timestamps:
    delete:
      responses:
        "200":
          description: OK
  /api/v1/admin/index/timestamps/{dvObjectId}:
    delete:
      parameters:
      - name: dvObjectId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/index/{type}/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/isOrcid:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/list-users:
    get:
      parameters:
      - name: itemsPerPage
        in: query
        schema:
          format: int32
          type: integer
      - name: searchTerm
        in: query
        schema:
          type: string
      - name: selectedPage
        in: query
        schema:
          format: int32
          type: integer
      - name: sortKey
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/makeDataCount/addUsageMetricsFromSushiReport:
    post:
      parameters:
      - name: reportOnDisk
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/makeDataCount/sendToHub:
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/makeDataCount/{id}/addUsageMetricsFromSushiReport:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: reportOnDisk
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/makeDataCount/{id}/updateCitationsForDataset:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/metadata/clearExportTimestamps:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/metadata/exportAll:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/metadata/exportOAI/{specname}:
    put:
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/metadata/reExportAll:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/metadata/{id}/reExportDataset:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/permissions/{dvo}:
    get:
      parameters:
      - name: dvo
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/publishDataverseAsCreator/{id}:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/registerDataFileAll:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/registerDataFiles/{alias}:
    get:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      - name: sleep
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/requestSignedUrl:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
  /api/v1/admin/roles:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/roles/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/savedsearches:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/savedsearches/list:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/savedsearches/makelinks/all:
    put:
      parameters:
      - name: debug
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/savedsearches/makelinks/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: debug
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/savedsearches/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/settings:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/settings/{name}:
    get:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/settings/{name}/lang/{lang}:
    put:
      parameters:
      - name: lang
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: lang
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/sitemap:
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/storageSites:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/storageSites/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/storageSites/{id}/primaryStorage:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/submitDatasetVersionToArchive/{id}/{version}:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/superuser/{identifier}:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/template/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/templates:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/templates/{alias}:
    get:
      parameters:
      - name: alias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/test/datasets/{id}/externalTools:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/test/files/{id}/externalTool/{toolId}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: toolId
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/test/files/{id}/externalTools:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/updateHashValues/{alg}:
    get:
      parameters:
      - name: alg
        in: path
        required: true
        schema:
          type: string
      - name: num
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/admin/validate/dataset/files/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/validate/dataset/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: variables
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/validate/datasets:
    get:
      parameters:
      - name: variables
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/admin/validateDataFileHashValue/{fileId}:
    post:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/validatePassword:
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/workflows:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/admin/workflows/default:
    get:
      responses:
        "200":
          description: OK
  /api/v1/admin/workflows/default/{triggerType}:
    get:
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: triggerType
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/workflows/ip-whitelist:
    get:
      responses:
        "200":
          description: OK
    put:
      responses:
        "200":
          description: OK
    delete:
      responses:
        "200":
          description: OK
  /api/v1/admin/workflows/{identifier}:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/{id}/registerDataFile:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/admin/{id}/reregisterHDLToPID:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/application.wadl:
    get:
      responses:
        "200":
          description: OK
  /api/v1/application.wadl/{path}:
    get:
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/batch/harvest:
    get:
      parameters:
      - name: createDV
        in: query
        schema:
          type: boolean
      - name: dv
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/batch/import:
    get:
      parameters:
      - name: createDV
        in: query
        schema:
          type: boolean
      - name: dv
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      - name: path
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: dv
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/batch/jobs/import/datasets/files/{identifier}:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: mode
        in: query
        schema:
          default: MERGE
          type: string
      - name: totalSize
        in: query
        schema:
          format: int64
          type: integer
      - name: uploadFolder
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/builtin-users:
    post:
      parameters:
      - name: key
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      - name: sendEmailNotification
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/builtin-users/{password}/{key}:
    post:
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: password
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/builtin-users/{password}/{key}/{sendEmailNotification}:
    post:
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
      - name: password
        in: path
        required: true
        schema:
          type: string
      - name: sendEmailNotification
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/builtin-users/{username}/api-token:
    get:
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/export:
    get:
      parameters:
      - name: exporter
        in: query
        schema:
          type: string
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/listCurationStates:
    get:
      responses:
        "200":
          description: OK
  /api/v1/datasets/locks:
    get:
      parameters:
      - name: type
        in: query
        schema:
          type: string
      - name: userIdentifier
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/modifyRegistrationAll:
    post:
      responses:
        "200":
          description: OK
  /api/v1/datasets/modifyRegistrationPIDMetadataAll:
    get:
      responses:
        "200":
          description: OK
  /api/v1/datasets/mpupload:
    put:
      parameters:
      - name: globalid
        in: query
        schema:
          type: string
      - name: storageidentifier
        in: query
        schema:
          type: string
      - name: uploadid
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: globalid
        in: query
        schema:
          type: string
      - name: storageidentifier
        in: query
        schema:
          type: string
      - name: uploadid
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/privateUrlDatasetVersion/{privateUrlToken}:
    get:
      parameters:
      - name: privateUrlToken
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/privateUrlDatasetVersion/{privateUrlToken}/citation:
    get:
      parameters:
      - name: privateUrlToken
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/summaryFieldNames:
    get:
      responses:
        "200":
          description: OK
  /api/v1/datasets/{datasetId}/deleteLink/{linkedDataverseId}:
    delete:
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          type: string
      - name: linkedDataverseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/allowedCurationLabels:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/assignments:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/assignments/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/curationLabelSet:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/dataCaptureModule/checksumValidation:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/dataCaptureModule/rsync:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/guestbookEntryAtRequest:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/lock/{type}:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/locks:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/storageDriver:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/storagesize:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: includeCached
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/timestamps:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{identifier}/versions/{versionId}/downloadsize:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: accessStatus
        in: query
        schema:
          type: string
      - name: categoryName
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: mode
        in: query
        schema:
          type: string
      - name: searchText
        in: query
        schema:
          type: string
      - name: tabularTagName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/actions/:publish:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
      deprecated: true
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: assureIsIndexed
        in: query
        schema:
          type: boolean
      - name: type
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/actions/:releasemigrated:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: updatepidatprovider
        in: query
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/add:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/addFiles:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/addGlobusFiles:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/citationdate:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/cleanStorage:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dryrun
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/curationStatus:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: label
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/deleteMetadata:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/destroy:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/dirindex:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: folder
        in: query
        schema:
          type: string
      - name: original
        in: query
        schema:
          type: boolean
      - name: version
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/editMetadata:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: replace
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/files/actions/:set-embargo:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/files/actions/:unset-embargo:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/globusDownloadParameters:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: downloadId
        in: query
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/globusUploadParameters:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/links:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/logo:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/makeDataCount/citations:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/makeDataCount/{metric}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/makeDataCount/{metric}/{yyyymm}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/metadata:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: replace
        in: query
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/metadata/delete:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/modifyRegistration:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/modifyRegistrationMetadata:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/monitorGlobusDownload:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/move/{targetDataverseAlias}:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: targetDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: forceMove
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/privateUrl:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: anonymizedAccess
        in: query
        schema:
          default: false
          type: boolean
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/replaceFiles:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/requestGlobusDownload:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: downloadId
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/requestGlobusUploadPaths:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/returnToAuthor:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/submitForReview:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/thumbnail:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              format: binary
              type: object
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/thumbnail/candidates:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/thumbnail/{dataFileId}:
    post:
      parameters:
      - name: dataFileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/uploadsid:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      deprecated: true
  /api/v1/datasets/{id}/uploadurls:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: size
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/userPermissions:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: excludeFiles
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: excludeFiles
        in: query
        schema:
          type: boolean
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/canDownloadAtLeastOneFile:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/citation:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/customlicense:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/deaccession:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/files:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: accessStatus
        in: query
        schema:
          type: string
      - name: categoryName
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          format: int32
          type: integer
      - name: offset
        in: query
        schema:
          format: int32
          type: integer
      - name: orderCriteria
        in: query
        schema:
          type: string
      - name: searchText
        in: query
        schema:
          type: string
      - name: tabularTagName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/files/counts:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      - name: accessStatus
        in: query
        schema:
          type: string
      - name: categoryName
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: includeDeaccessioned
        in: query
        schema:
          type: boolean
      - name: searchText
        in: query
        schema:
          type: string
      - name: tabularTagName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/linkset:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionId}/metadata:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{versionNumber}/metadata/{block}:
    get:
      parameters:
      - name: block
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: versionNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/versions/{version}/toolparams/{tid}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: tid
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: version
        in: path
        required: true
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{id}/{version}/archivalStatus:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: version
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datasets/{linkedDatasetId}/link/{linkingDataverseAlias}:
    put:
      parameters:
      - name: linkedDatasetId
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/datatags/receiveTags/{uniqueCacheId}:
    post:
      parameters:
      - name: uniqueCacheId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses:
    post:
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/actions/:publish:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/assignments:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/assignments/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/attribute/{attribute}:
    put:
      parameters:
      - name: attribute
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: value
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/contents:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/datasetSchema:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/datasets:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: doNotValidate
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/datasets/:import:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: pid
        in: query
        schema:
          type: string
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/datasets/:importddi:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: pid
        in: query
        schema:
          type: string
      - name: release
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/datasets/:startmigration:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/defaultContributorRole/{roleAlias}:
    put:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: roleAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/facets:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/groups:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/groups/{aliasInOwner}:
    get:
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees:
    post:
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/groups/{aliasInOwner}/roleAssignees/{roleAssigneeIdentifier}:
    put:
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: roleAssigneeIdentifier
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: aliasInOwner
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: roleAssigneeIdentifier
        in: path
        required: true
        schema:
          pattern: .*
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/guestbookResponses:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: guestbookId
        in: query
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/links:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/metadatablockfacets:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/metadatablockfacets/isRoot:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/metadatablocks:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/metadatablocks/:isRoot:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/roles:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/storage/quota:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/storage/quota/{bytesAllocated}:
    post:
      parameters:
      - name: bytesAllocated
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/storage/use:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/storagesize:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: includeCached
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{identifier}/validateDatasetJson:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{id}/move/{targetDataverseAlias}:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: targetDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: forceMove
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{linkedDataverseAlias}/link/{linkingDataverseAlias}:
    put:
      parameters:
      - name: linkedDataverseAlias
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseAlias
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/dataverses/{linkingDataverseId}/deleteLink/{linkedDataverseId}:
    delete:
      parameters:
      - name: linkedDataverseId
        in: path
        required: true
        schema:
          type: string
      - name: linkingDataverseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/edit/{fileId}:
    put:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/xml:
            schema:
              format: binary
              type: string
      responses:
        "200":
          description: OK
  /api/v1/files/fixityAlgorithm:
    get:
      responses:
        "200":
          description: OK
  /api/v1/files/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/dataTables:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/downloadCount:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/draft:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/extractNcml:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/hasBeenDeleted:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/metadata:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/metadata/categories:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/metadata/draft:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/metadata/tabularTags:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/metadata/{fmid}/toolparams/{tid}:
    get:
      parameters:
      - name: fmid
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: tid
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: locale
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/prov-freeform:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/prov-json:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: entityName
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/redetect:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: dryRun
        in: query
        schema:
          type: boolean
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/reingest:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/replace:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/restrict:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/files/{id}/uningest:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/harvest/clients:
    get:
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/harvest/clients/{nickName}:
    get:
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/harvest/clients/{nickName}/run:
    post:
      parameters:
      - name: nickName
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/harvest/server/oaisets:
    get:
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/harvest/server/oaisets/add:
    post:
      parameters:
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/harvest/server/oaisets/{specname}:
    get:
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    put:
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/harvest/server/oaisets/{specname}/datasets:
    get:
      parameters:
      - name: specname
        in: path
        required: true
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/inbox:
    post:
      requestBody:
        content:
          application/ld+json:
            schema:
              type: string
          application/json-ld:
            schema:
              type: string
      responses:
        "200":
          description: OK
  /api/v1/info/apiTermsOfUse:
    get:
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/datasets:
    get:
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/datasets/bySubject:
    get:
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/datasets/bySubject/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/datasets/monthly:
    get:
      parameters:
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/datasets/pastDays/{days}:
    get:
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/datasets/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: dataLocation
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/dataverses:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/dataverses/byCategory:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/dataverses/bySubject:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/dataverses/monthly:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/dataverses/pastDays/{days}:
    get:
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/dataverses/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/downloads:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/downloads/monthly:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/downloads/pastDays/{days}:
    get:
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/downloads/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/filedownloads:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/filedownloads/monthly:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/filedownloads/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/files:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/files/byType:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/files/byType/monthly:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/files/monthly:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/files/pastDays/{days}:
    get:
      parameters:
      - name: days
        in: path
        required: true
        schema:
          format: int32
          type: integer
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/files/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/makeDataCount/{metric}:
    get:
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/makeDataCount/{metric}/monthly:
    get:
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/makeDataCount/{metric}/toMonth/{yyyymm}:
    get:
      parameters:
      - name: metric
        in: path
        required: true
        schema:
          type: string
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: country
        in: query
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/tree:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/tree/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/uniquedownloads:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/uniquedownloads/monthly:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/uniquedownloads/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/uniquefiledownloads:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/uniquefiledownloads/monthly:
    get:
      parameters:
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/metrics/uniquefiledownloads/toMonth/{yyyymm}:
    get:
      parameters:
      - name: yyyymm
        in: path
        required: true
        schema:
          type: string
      - name: parentAlias
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/openapi/{format}:
    get:
      parameters:
      - name: format
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/info/server:
    get:
      responses:
        "200":
          description: OK
  /api/v1/info/settings/:DatasetPublishPopupCustomText:
    get:
      responses:
        "200":
          description: OK
  /api/v1/info/settings/:MaxEmbargoDurationInMonths:
    get:
      responses:
        "200":
          description: OK
  /api/v1/info/settings/incompleteMetadataViaApi:
    get:
      responses:
        "200":
          description: OK
  /api/v1/info/version:
    get:
      responses:
        "200":
          description: OK
  /api/v1/info/zipDownloadLimit:
    get:
      responses:
        "200":
          description: OK
  /api/v1/ingest/test/file:
    get:
      parameters:
      - name: fileName
        in: query
        schema:
          type: string
      - name: fileType
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/v1/licenses:
    get:
      responses:
        "200":
          description: OK
    post:
      responses:
        "200":
          description: OK
  /api/v1/licenses/default:
    get:
      responses:
        "200":
          description: OK
  /api/v1/licenses/default/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/licenses/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/licenses/{id}/:active/{activeState}:
    put:
      parameters:
      - name: activeState
        in: path
        required: true
        schema:
          type: boolean
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/licenses/{id}/:sortOrder/{sortOrder}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: sortOrder
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/logout:
    post:
      responses:
        "200":
          description: OK
  /api/v1/mail/notifications:
    get:
      responses:
        "200":
          description: OK
  /api/v1/meta/datafile/{fileId}:
    get:
      parameters:
      - name: fileId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: exclude
        in: query
        schema:
          type: string
      - name: fileMetadataId
        in: query
        schema:
          format: int64
          type: integer
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/xml:
              schema:
                type: string
      deprecated: true
  /api/v1/meta/dataset/{datasetId}:
    get:
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          format: int64
          type: integer
      - name: exclude
        in: query
        schema:
          type: string
      - name: include
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
      deprecated: true
  /api/v1/metadatablocks:
    get:
      responses:
        "200":
          description: OK
  /api/v1/metadatablocks/{identifier}:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/mydata/retrieve:
    get:
      parameters:
      - name: dataset_valid
        in: query
        schema:
          type: array
          items:
            type: boolean
      - name: dvobject_types
        in: query
        schema:
          type: array
          items:
            type: string
      - name: filter_validities
        in: query
        schema:
          type: boolean
      - name: mydata_search_term
        in: query
        schema:
          type: string
      - name: published_states
        in: query
        schema:
          type: array
          items:
            type: string
      - name: role_ids
        in: query
        schema:
          type: array
          items:
            format: int64
            type: integer
      - name: selected_page
        in: query
        schema:
          format: int32
          type: integer
      - name: userIdentifier
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/v1/notifications/all:
    get:
      responses:
        "200":
          description: OK
  /api/v1/notifications/mutedEmails:
    get:
      responses:
        "200":
          description: OK
  /api/v1/notifications/mutedEmails/{typeName}:
    put:
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/notifications/mutedNotifications:
    get:
      responses:
        "200":
          description: OK
  /api/v1/notifications/mutedNotifications/{typeName}:
    put:
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: typeName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/notifications/{id}:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          description: OK
  /api/v1/pids:
    get:
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/pids/unreserved:
    get:
      parameters:
      - name: persistentId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/pids/{id}/delete:
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/pids/{id}/reserve:
    post:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/roles:
    post:
      parameters:
      - name: dvo
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/roles/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/search:
    get:
      parameters:
      - name: fq
        in: query
        schema:
          type: array
          items:
            type: string
      - name: geo_point
        in: query
        schema:
          type: string
      - name: geo_radius
        in: query
        schema:
          type: string
      - name: metadata_fields
        in: query
        schema:
          type: array
          items:
            type: string
      - name: order
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          format: int32
          type: integer
      - name: q
        in: query
        schema:
          type: string
      - name: query_entities
        in: query
        schema:
          type: boolean
      - name: show_api_urls
        in: query
        schema:
          type: boolean
      - name: show_entity_ids
        in: query
        schema:
          type: boolean
      - name: show_facets
        in: query
        schema:
          type: boolean
      - name: show_my_data
        in: query
        schema:
          type: boolean
      - name: show_relevance
        in: query
        schema:
          type: boolean
      - name: sort
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          format: int32
          type: integer
      - name: subtree
        in: query
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
  /api/v1/users/:me:
    get:
      responses:
        "200":
          description: OK
  /api/v1/users/token:
    get:
      responses:
        "200":
          description: OK
    delete:
      responses:
        "200":
          description: OK
  /api/v1/users/token/recreate:
    post:
      responses:
        "200":
          description: OK
  /api/v1/users/{consumedIdentifier}/mergeIntoUser/{baseIdentifier}:
    post:
      parameters:
      - name: baseIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: consumedIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/users/{identifier}/changeIdentifier/{newIdentifier}:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: newIdentifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/users/{identifier}/removeRoles:
    post:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/users/{identifier}/traces:
    get:
      parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/users/{identifier}/traces/{element}:
    get:
      parameters:
      - name: element
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/workflows/{invocationId}:
    post:
      parameters:
      - name: invocationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
